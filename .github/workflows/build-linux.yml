name: Build (Linux)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependency
      run: sudo apt install libasound2-dev libx11-dev libxrandr-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev libxcursor-dev libxinerama-dev libwayland-dev libxkbcommon-dev zlib1g-dev libpng-dev bison rsync zip python3 python-is-python3

    - name: Get submodule commit
      run: |
        echo "ROM_COMMIT=$(git submodule status game-boy-test-roms)" >> $GITHUB_ENV
        echo "RAYLIB_COMMIT=$(git submodule status raylib)" >> $GITHUB_ENV

    - name: root suid tar
      run: sudo chown root:root /bin/tar && sudo chmod u+s /bin/tar

    - name: Restore cached raylib
      id: cache-raylib-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          /usr/local/lib/libraylib.so.5.5.0
          /usr/local/lib/libraylib.so.550
          /usr/local/lib/libraylib.so
          /usr/local/include/raylib.h
          /usr/local/include/rlgl.h
          /usr/local/include/raymath.h
          /usr/local/lib/pkgconfig/raylib.pc
          /usr/local/lib/cmake/raylib/raylib-config-version.cmake
          /usr/local/lib/cmake/raylib/raylib-config.cmake
        key: ${{ env.RAYLIB_COMMIT }}

    - name: Build Raylib
      if: steps.cache-raylib-restore.outputs.cache-hit != 'true'
      run: |
        cd raylib
        mkdir build && cd build
        cmake -DBUILD_SHARED_LIBS=ON ..
        make && sudo make install

    - name: Save Raylib
      id: cache-raylib-save
      uses: actions/cache/save@v4
      with:
        path: |
          /usr/local/lib/libraylib.so.5.5.0
          /usr/local/lib/libraylib.so.550
          /usr/local/lib/libraylib.so
          /usr/local/include/raylib.h
          /usr/local/include/rlgl.h
          /usr/local/include/raymath.h
          /usr/local/lib/pkgconfig/raylib.pc
          /usr/local/lib/cmake/raylib/raylib-config-version.cmake
          /usr/local/lib/cmake/raylib/raylib-config.cmake
        key: ${{ steps.cache-raylib-restore.outputs.cache-primary-key }}

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Prepare artifacts
      run: cp /usr/local/lib/libraylib.so.550 build && cd build && patchelf --remove-needed libraylib.so.550 ChillyGB && patchelf --add-needed ./libraylib.so.550 ChillyGB

    - uses: actions/upload-artifact@v4
      with:
        name: ChillyGB-release-linux-x86_64
        path: |
          build/ChillyGB
          build/res
          build/libraylib.so.550

    - name: Restore cached Roms
      id: cache-roms-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          game-boy-test-roms/artifacts
        key: ${{ env.ROM_COMMIT }}

    - name: Build Roms
      if: steps.cache-roms-restore.outputs.cache-hit != 'true'
      run: |
        cd game-boy-test-roms/src
        ./assemble-all.sh

    - name: Save Roms
      id: cache-roms-save
      uses: actions/cache/save@v4
      with:
        path: |
          game-boy-test-roms/artifacts
        key: ${{ steps.cache-roms-restore.outputs.cache-primary-key }}

    - name: Run tests
      run: |
        cd build
        ctest --build-config ${{env.BUILD_TYPE}}